[tool.poetry]
name = "howfast-apm"
version = "0.8.0"
description = "Lightweight Application Performance Monitoring middleware that measures and reports performance data to HowFast APM."
authors = ["MickaÃ«l Bergem <mickael@howfast.tech>"]
homepage = "https://github.com/HowFast/apm-python"
license = "MIT"
readme = "README.rst"
keywords = ["apm", "performance", "timing", "howfast"]
# See https://pypi.python.org/pypi?%3Aaction=list_classifiers
classifiers=[
    # How mature is this project? Common values are
    #   3 - Alpha
    #   4 - Beta
    #   5 - Production/Stable
    'Development Status :: 4 - Beta',
    'Framework :: Flask',

    # Indicate who your project is intended for
    'Intended Audience :: Developers',
    'Topic :: Software Development :: Build Tools',

    'License :: OSI Approved :: MIT License',

    'Programming Language :: Python :: 3',
]

[tool.poetry.dependencies]
python = ">=3.9.20,<3.13"
requests = ">=2.22"
flask = {version = ">=0.8", optional = true}
werkzeug = {version = ">=0.7", optional = true}
blinker = {version = ">=1.1", optional = true}

[tool.poetry.dev-dependencies]
pytest = "^8.3"
coverage = "^7.4"
ruff = {version="^0.6.9"}
mypy = "^1.11"
coveralls = "^3.3"
ipdb = "^0.13.13"
pytest-watch = "^4.2"

[tool.poetry.extras]
flask = ["flask", "blinker", "werkzeug"]

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"

[tool.ruff]
# Assume Python 3.12.
target-version = "py312"

lint.select = ["E", "F"]
lint.ignore = [
    "E501",  # Line too long
]

# Allow autofix for all enabled rules (when `--fix`) is provided.
lint.fixable = ["A", "B", "C", "D", "E", "F"]
lint.unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".tox",
    "venv",
    "dist",
    "__init__.py",
]

# Same as Black.
line-length = 160

# Allow unused variables when underscore-prefixed.
lint.dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"


[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 14

[tool.ruff.lint.per-file-ignores]
# Allow unused imports in __init__.py files
"__init__.py" = ["F401"]
